@model List<PortfolioTracker.Models.PortfolioItem>


<head>

    <base href="/PortfolioTracker/">
    <style>
        .layout-container {
            display: flex;
            justify-content: space-between;
            align-items: flex-start;
            gap: 60px; /* רווח גדול יותר בין הטבלה לגרפים */
            margin-top: 20px;
        }

        .table-container {
            flex: 1; /* התאמה אוטומטית לגודל */
            max-width: 45%; /* מקסימום רוחב לטבלה */
            background: #fff;
            border: 1px solid #ddd;
            border-radius: 8px;
            padding: 15px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        }

        .graph-container {
            flex: 1; /* התאמה אוטומטית לגודל */
            display: flex;
            flex-direction: column; /* גרפים אחד מתחת לשני */
            gap: 50px; /* רווח בין הגרפים */
            max-width: 50%; /* מקסימום רוחב לגרפים */
        }

        .graph-item {
            width: 100%; /* התאמה לרוחב הקונטיינר */
            height: 350px; /* גובה הגרפים */
            background: #f9f9f9;
            border: 1px solid #ddd;
            border-radius: 8px;
            padding: 20px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            text-align: center;
        }

            .graph-item canvas {
                width: 100%;
                height: 100%;
            }

        #portfolio-details {
            text-align: center;
            margin-bottom: 15px;
            background-color: #f8f9fa;
            border: 1px solid #ddd;
            border-radius: 8px;
            padding: 10px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        }

        .portfolio-size {
            font-size: 20px;
            font-weight: bold;
            color: #333;
        }
        #addStockButton,
        .year-selector select {
            padding: 10px 16px;
            font-size: 16px;
            border: 1px solid #28a745;
            border-radius: 5px;
            height: 42px;
            line-height: 1;
            display: inline-block;
            vertical-align: middle;
            background-color: #ffffff; /* רקע לבן עבור ה-dropdown */
            color: #333; /* צבע טקסט */
            box-shadow: none;
        }

        #addStockButton {
            background-color: #28a745; /* רקע ירוק לכפתור */
            color: #ffffff; /* טקסט לבן */
        }

        .year-selector {
            display: flex;
            align-items: center;
            gap: 10px; /* רווח בין הכפתור ל-dropdown */
        }

        .chart-container {
            width: 100%; /* תפס את כל הרוחב */
            max-width: 1000px; /* הגבל את הרוחב המקסימלי (אפשר להגדיל עוד) */
            margin: 30px auto; /* מרכז את הגרף */
            height: 359px; /* הגדל את הגובה של הגרפים */
        }

        h2 {
            text-align: center; /* יישור כותרות למרכז */
            margin-bottom: 20px; /* רווח מתחת לכותרת */
            font-size: 24px; /* גודל פונט מוגדל */
        }
        .tab-container {
            width: 100%;
            max-width: 800px;
            margin: 0 auto;
            border: 1px solid #ddd;
            border-radius: 8px;
            overflow: hidden;
        }

        .tabs {
            display: flex;
            justify-content: space-around;
            background-color: #f5f5f5;
            border-bottom: 1px solid #ddd;
        }

        .tab {
            flex: 1;
            text-align: center;
            padding: 10px 20px;
            cursor: pointer;
            font-size: 16px;
        }

            .tab.active {
                background-color: #ffffff;
                font-weight: bold;
                border-bottom: 2px solid #007bff;
            }

        .content-container {
            padding: 20px;
            height: 500px; /* קבע גובה קבוע עם גלילה */
            overflow-y: auto;
        }

        .content {
            display: none;
        }

            .content.active {
                display: block;
            }
        /* תפריט צד */
        .sidebar {
            width: 180px;
            height: calc(100vh - 60px);
            position: fixed;
            top: 60px;
            left: 0;
            background-color: #f5f5f5;
            border-right: 1px solid #ddd;
            display: flex;
            flex-direction: column;
            align-items: center;
            padding-top: 20px;
            overflow-y: auto;
            z-index: 1000;
        }

            .sidebar a {
                padding: 10px 15px;
                text-align: center;
                text-decoration: none;
                color: #333;
                font-size: 14px;
                margin: 5px 0;
                border-radius: 5px;
                width: 90%;
            }

                .sidebar a:hover, .sidebar a.active {
                    background-color: #007bff;
                    color: white;
                }

        /* תוכן */
        .content {
            margin-left: 200px;
            padding: 20px;
        }

        .page {
            display: none; /* הסתר את כל התוכן */
        }

            .page.active {
                display: block; /* הצג רק את הדף הפעיל */
            }

    </style>

    

</head>

<body>

    <!-- כפתור הוספת מניה -->
    <div class="year-selector">
        <button id="addStockButton" class="btn btn-success" data-bs-toggle="modal" data-bs-target="#addStockModal">
            הוסף מניה
        </button>
        <form method="get" action="/Portfolio/Index" style="margin: 0;">
            <select name="selectedYear" id="selectedYear" class="form-select" onchange="this.form.submit()">
                <option value="">All Years - Graph📈</option>
                @foreach (var year in ViewBag.Years)
                {
                    <option value="@year" @(year == ViewBag.SelectedYear ? "selected" : "")>@year</option>
                }
            </select>
        </form>

    </div>
    <div style="text-align: left;">
        <h4>Absolute Success Rate: @ViewBag.AbsoluteSuccessRate.ToString("0.00") %</h4>
        <h4>Relative Success Rate (vs. SPX): @ViewBag.RelativeSuccessRate %</h4>
        @*   <h4>Total Market Performance: @ViewBag.TotalMarketPerformance.ToString("0.00") %</h4>*@
    </div>
   <div class="sidebar">
    <!-- קישורים לתוכן -->
    <a href="#" class="menu-item active" data-page="top-earning">Top 10 Earning Stocks</a>
    <a href="#" class="menu-item" data-page="bottom-losing">Bottom 10 Losing Stocks</a>
    <a href="#" class="menu-item" data-page="table">Portfolio Table</a>
</div>

    <div id="table" class="page">
    
        <h1 class="text-center mb-4">Trading</h1>

        <div class="layout-container">
            <!-- טבלה -->
            <div class="table-container">
                <h3 class="text-center">Portfoilio -  Live and Active</h3>
                <table class="table table-striped">
                    <thead>
                        <tr>
                            <th>Stock</th>
                            <th>Price ($)</th>
                            <th>P/L Day (%)</th>
                            <th>P/L ($)</th>
                            <th>P/L (%)</th>

                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                            <tr>
                                <td>@item.Stock</td>
                                <td>@item.Price.ToString("0.00")</td>
                                <td>@item.ChangePercentage.ToString("0.00") %</td>
                                <td class="pl-value" data-value="@item.ProfitLoss">
                                    @item.ProfitLoss.ToString("0.00")
                                </td>
                                <td class="pl-percentage" data-value="@item.ProfitLossPercentage">
                                    @item.ProfitLossPercentage.ToString("0.00") %
                                </td>
                                <td>
                                    <form action="/Portfolio/DeleteStock" method="post">
                                        <input type="hidden" name="stock" value="@item.Stock" />
                                        <button type="submit" class="btn btn-danger btn-sm">Delete</button>
                                    </form>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>

            <!-- גרפים -->
            <div class="graph-container">
                <!-- גרף עוגה -->
                <div class="graph-item">
                    <h3>פיזור תיק ההשקעות - פעיל</h3>
                    <canvas id="portfolioPieChart"></canvas>
                    <div class="active-portfolio-size mt-3">

                        <span id="activePortfolioSize" style="font-size: 18px; font-weight: bold;"></span>
                    </div>
                </div>




                <div class="chart-container">
                    <h2 class="text-center">תשואה לאורך זמן - התיק מול השוק</h2>
                    <canvas id="lineChart"></canvas>
                </div>

            </div>

        </div>
    </div>
    <div class="content">
        <!-- עמוד ראשון: גרף Top Earning -->
        <div id="top-earning" class="page active">
            <h2>Top 10 Earning Stocks</h2>
            <canvas id="topEarningChart"></canvas>
        </div>

        <!-- עמוד שני: גרף Bottom Losing -->
        <div id="bottom-losing" class="page">
            <h2>Bottom 10 Losing Stocks</h2>
            <canvas id="bottomLosingChart"></canvas>
        </div>

    </div>
</body>

<!-- Modal להוספת מניה -->
<div class="modal fade" id="addStockModal" tabindex="-1" aria-labelledby="addStockModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addStockModalLabel">הוסף מניה</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="addStockForm" action="/Portfolio/AddStock" method="post">
                    <div class="mb-3">
                        <label for="stock" class="form-label">Stock Symbol- Capital letters!:</label>
                        <input type="text"
                               id="stock"
                               name="stock"
                               class="form-control"
                               required
                               oninput="this.value = this.value.toUpperCase();">
                    </div>




                    <div class="mb-3">
                        <label for="purchasePrice" class="form-label">Purchase Price ($):</label>
                        <input type="number" id="purchasePrice" name="purchasePrice" class="form-control" step="0.01" required>
                    </div>
                    <div class="mb-3">
                        <label for="investment" class="form-label">Investment Amount ($):</label>
                        <input type="number" id="investment" name="investment" class="form-control" step="0.01" required>
                    </div>
                    <div class="mb-3">
                        <label for="dateAdded" class="form-label">Date:</label>
                        <input type="date" id="dateAdded" name="dateAdded" class="form-control" required>
                    </div>

                    <button type="submit" class="btn btn-primary">Add Stock</button>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- הוספת ספריות Chart.js -->
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script src="https://cdn.jsdelivr.net/npm/chartjs-plugin-datalabels"></script>

<!-- סקריפט לגרפים -->
<script>
document.addEventListener("DOMContentLoaded", async function () {
    // 1. Coloring P/L Cells
    document.querySelectorAll(".pl-value, .pl-percentage").forEach(cell => {
        const value = parseFloat(cell.getAttribute("data-value"));
        if (!isNaN(value)) {
            cell.style.color = value < 0 ? "red" : "green";
        }
    });

    // 2. Pie Chart Data
    const labelsPie = @Html.Raw(Json.Encode(Model.Select(p => p.Stock))); // Stock names
    const dataPie = @Html.Raw(Json.Encode(Model.Select(p => p.Investment))); // Investments
    const totalInvestmentPie = dataPie.reduce((sum, value) => sum + value, 0); // Total investment

    const ctxPie = document.getElementById('portfolioPieChart').getContext('2d');
    new Chart(ctxPie, {
        type: 'pie',
        data: {
            labels: labelsPie,
            datasets: [{
                data: dataPie.map(value => ((value / totalInvestmentPie) * 100).toFixed(2)), // Percentages
                backgroundColor: ['#FF6384', '#36A2EB', '#FFCE56', '#4BC0C0', '#9966FF', '#FF9F40'],
                hoverOffset: 4
            }]
        },
        options: {
            responsive: true,
            plugins: {
                legend: { position: 'top' },
                datalabels: {
                    color: '#fff',
                    font: { size: 14, weight: 'bold' },
                    formatter: (value, context) => `${context.chart.data.labels[context.dataIndex]}\n${value}%`
                }
            }
        },
        plugins: [ChartDataLabels]
    });

    // 3. Line Chart Data
    const labelsBar = @Html.Raw(Json.Encode(ViewBag.Months)); // Months
    const myReturnsBar = @Html.Raw(Json.Encode(ViewBag.MonthlyReturns)); // Monthly returns
    const marketReturns = @Html.Raw(Json.Encode(ViewBag.MarketReturns)); // Market returns

    const ctxLine = document.getElementById('lineChart').getContext('2d');
    const lineChart = new Chart(ctxLine, {
        type: 'line',
        data: {
            labels: labelsBar,
            datasets: [
                {
                    label: 'My Returns (%)',
                    data: myReturnsBar,
                    borderColor: '#36A2EB',
                    fill: false,
                    tension: 0.4
                },
                {
                    label: 'Market Returns (%)',
                    data: marketReturns,
                    borderColor: '#FF6384',
                    fill: false,
                    tension: 0.4
                }
            ]
        },
        options: {
            responsive: true,
            plugins: {
                legend: { position: 'top' },
                tooltip: {
                    callbacks: {
                        label: function (tooltipItem) {
                            return `${tooltipItem.dataset.label}: ${tooltipItem.raw.toFixed(2)}%`;
                        }
                    }
                }
            }
        }
    });

    // 4. Update Line Chart Based on Year Dropdown
    const yearDropdown = document.getElementById("selectedYear");
    yearDropdown.addEventListener("change", function () {
        const selectedYear = this.value;
        fetch(`/Portfolio/GetYearlyData?year=${selectedYear}`)
            .then(response => response.json())
            .then(data => {
                lineChart.data.labels = data.months; // Update months
                lineChart.data.datasets[0].data = data.returns; // Update returns
                lineChart.update();
            })
            .catch(error => console.error("Failed to fetch yearly data:", error));
    });
   const menuItems = document.querySelectorAll('.menu-item');
    const pages = document.querySelectorAll('.page');

    menuItems.forEach(item => {
        item.addEventListener('click', function(e) {
            e.preventDefault();

            // הסר מצב פעיל מכל הפריטים
            menuItems.forEach(i => i.classList.remove('active'));
            pages.forEach(p => p.classList.remove('active'));

            // הפעל את הפריט הנוכחי ואת העמוד המתאים
            item.classList.add('active');
            const pageId = item.dataset.page;
            document.getElementById(pageId).classList.add('active');
        });
    });

    // טעינת הגרפים
    const topEarningChart = document.getElementById('topEarningChart');
    new Chart(topEarningChart, {
        type: 'bar',
        data: {
            labels: @Html.Raw(Json.Encode(ViewBag.TopEarningStockNames)),
            datasets: [{
                label: 'Profit ($)',
                data: @Html.Raw(Json.Encode(ViewBag.TopEarningStockProfits)),
                backgroundColor: 'rgba(75, 192, 192, 0.2)',
                borderColor: 'rgba(75, 192, 192, 1)',
                borderWidth: 1
            }]
        },
        options: {
            responsive: true,
            maintainAspectRatio: false,
            scales: {
                y: {
                    beginAtZero: true
                }
            }
        }
    });

    const bottomLosingChart = document.getElementById('bottomLosingChart');
    new Chart(bottomLosingChart, {
        type: 'bar',
        data: {
            labels: @Html.Raw(Json.Encode(ViewBag.BottomLosingStockNames)),
            datasets: [{
                label: 'Loss ($)',
                data: @Html.Raw(Json.Encode(ViewBag.BottomLosingStockLosses)),
                backgroundColor: 'rgba(255, 99, 132, 0.2)',
                borderColor: 'rgba(255, 99, 132, 1)',
                borderWidth: 1
            }]
        },
        options: {
            responsive: true,
            maintainAspectRatio: false,
            scales: {
                y: {
                    beginAtZero: true
                }
            }
        }
    });
});
</script>
